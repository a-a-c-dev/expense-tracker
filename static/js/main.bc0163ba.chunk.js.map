{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/TextInput.js","components/AmountInput.js","components/AddTransaction.js","components/Currency.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","currency","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","changeCurrency","Balance","React","memo","useContext","amounts","map","total","reduce","acc","val","toFixed","className","IncomeExpenses","income","item","expense","Transaction","sign","Math","abs","onClick","TransactionList","TextInput","validText","textRequired","handleChange","htmlFor","name","onChange","placeholder","AmountInput","validAmount","amountRequired","AddTransaction","useState","setText","setAmount","errors","setErrors","fieldIsValid","useCallback","match","length","Object","keys","e","target","onSubmit","preventDefault","newTransaction","floor","random","Currency","selectionValue","setSelectionValue","useEffect","defaultValue","event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc0163ba.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <h1>מעקב הוצאות</h1>\r\n    )\r\n}","export default (state,action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION': \r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload,...state.transactions]\r\n            }\r\n            case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload,...state.transactions]\r\n            }\r\n        case 'CHANGE_CURRENCY':\r\n            return{\r\n                ...state,\r\n                currency:action.payload\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n}","import React,{ createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n\r\nconst initialState = {\r\n    \r\n    currency:'$',\r\n    transactions:[\r\n        {id:1, text:'פרחים', amount:-20,currency:'₪'},\r\n        {id:2, text:'משכורת', amount:300, currency:'$'} ,\r\n        {id:3, text:'שוקולד', amount:-20 , currency:'₪'},\r\n        {id:4, text:'מצלמה', amount:-120 , currency:'$'} \r\n    ]\r\n}\r\n\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n\r\n// Provider Components\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions \r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION',\r\n            payload:id\r\n        });\r\n    }\r\n\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload:transaction\r\n        });\r\n    }\r\n    \r\n    function changeCurrency(currency) {\r\n        dispatch({\r\n            type:'CHANGE_CURRENCY',\r\n            payload:currency\r\n        });\r\n    }\r\n    return(<GlobalContext.Provider value={{\r\n                transactions:state.transactions,\r\n                currency:state.currency,\r\n                deleteTransaction,\r\n                addTransaction,\r\n                changeCurrency\r\n            }}>\r\n                {children}\r\n            </GlobalContext.Provider>);\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance =React.memo(() => {\r\n    const {currency, transactions } = useContext(GlobalContext)\r\n    const defaultCurrency='₪'\r\n    const dollarSign='$'\r\n    const dollarRate = 3.24; \r\n    const euroRate = 3.78\r\n    const amounts = transactions.map(transaction=> transaction.currency===defaultCurrency?\r\n                                        transaction.amount\r\n                                        :transaction.currency===dollarSign?\r\n                                        transaction.amount*dollarRate\r\n                                        :transaction.amount*euroRate\r\n                                        );\r\n    const total = currency===defaultCurrency? amounts.reduce((acc,val)=>(acc+=val),0).toFixed(2)\r\n                                            :currency===dollarSign?(amounts.reduce((acc,val)=>(acc+=val),0)/3.245).toFixed(2):\r\n                                             (amounts.reduce((acc,val)=>(acc+=val),0)/3.7830).toFixed(2);\r\n    \r\n    return(\r\n        <>\r\n            <h3 >המאזן שלך</h3>\r\n            <h1 className={total<0?'minus':'plus'}>{total<0?`${total} ${currency}`:`${currency} ${total}`}</h1>\r\n        </>\r\n    )\r\n})","import React, {useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    // Calculate the amount\r\n    const defaultCurrency='₪'\r\n    const dollarSign='$'\r\n    const dollarRate = 3.325; \r\n    const euroRate = 3.78\r\n    const amounts = transactions.map(transaction=> transaction.currency===defaultCurrency?\r\n                                        transaction.amount\r\n                                        :transaction.currency===dollarSign?\r\n                                        transaction.amount*dollarRate\r\n                                        :transaction.amount*euroRate\r\n                                        );\r\n                                        \r\n    //Calculate the income \r\n        const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc,item)=>{\r\n            return(acc+=item)},0)\r\n        .toFixed(2);\r\n    //Calculate the expense\r\n    const expense = (\r\n        amounts\r\n        .filter(item=>item<0)\r\n        .reduce((acc,item)=>(acc+=item),0)\r\n        *-1\r\n        ).toFixed(2);\r\n    \r\n    return(\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>הכנסה</h4>\r\n                <p  className=\"money plus\">{\r\n                     `${defaultCurrency} ${income}`\r\n                }</p>\r\n            </div>\r\n            <div>\r\n                <h4>הוצאה</h4>\r\n                <p  className=\"money minus\">\r\n                  {\r\n                  `${defaultCurrency} ${expense}`\r\n                  }\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = React.memo(({transaction}) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    \r\n    const sign = transaction.amount<0?'-':'+';\r\n    \r\n    return (\r\n        <li className={transaction.amount<0?'minus':'plus'}>\r\n            {transaction.text} <span>{sign}{transaction.currency}{Math.abs(transaction.amount)}</span> \r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n        </li>\r\n\r\n    )\r\n})","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport {Transaction} from './Transaction';\r\n\r\nexport const TransactionList =React.memo(() => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    return(\r\n        <div className='transaction-list-container'>\r\n            <h3>היסטוריה</h3>\r\n            <ul  className=\"list\">\r\n                {transactions.map(transaction=>(\r\n                  <Transaction key={transaction.id} transaction={transaction}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\n\r\nexport const TextInput =React.memo(({text, validText, textRequired, handleChange})=>{\r\n    return(\r\n        <div className='input-container'>\r\n            <label htmlFor=\"text\">שם עסקה</label>\r\n            <input type=\"text\" name=\"text\" value={text} onChange={handleChange}   placeholder=\"שם עסקה...\"/>\r\n            {textRequired?(<p className=\"error\">{textRequired}</p>):validText?(<p className=\"error\">{validText}</p>):null}\r\n        </div>\r\n    )\r\n\r\n})\r\n","import React from 'react';\r\n\r\nexport const AmountInput =React.memo(({amount, validAmount, amountRequired, handleChange})=>{\r\n    return(\r\n        <div className='input-container'>\r\n            <label htmlFor=\"amount\">סכום</label>\r\n            <input  type=\"number\"  name=\"amount\" value={amount}  onChange={handleChange}  placeholder=\"הכנס סכום עסקה...\"/>\r\n            {amountRequired?(<p className=\"error\">{amountRequired}</p>):validAmount?(<p className=\"error\">{validAmount}</p>):null }\r\n        </div>\r\n\r\n    )\r\n\r\n})","import React,{useState,useContext,useCallback} from 'react';\r\nimport {TextInput} from './TextInput';\r\nimport {AmountInput} from './AmountInput';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction =React.memo(() => {\r\n\r\n    const [text,setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [errors, setErrors] = useState({\r\n    });\r\n\r\n    const { addTransaction,currency } = useContext(GlobalContext);\r\n\r\n        \r\n    const fieldIsValid = useCallback( () => {\r\n        const errors = {};\r\n        const textPattern = /^[\\u0591-\\u05F4\\s]+$/gi\r\n        if (!text) errors.textRequired = \"*שם עסקה הוא שדה חובה\";\r\n        if (!text.match(textPattern)) errors.validText = \"*שם עסקה, הטקסט חייב להיות בשפה העברית\";\r\n        if (amount===0) errors.amountRequired = \"*סכום הוא שדה חובה\";\r\n        if(amount.length>8) errors.validAmount = \"*אנא הכנס סכום עד שמונה ספרות\";\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0\r\n    },[text, amount]);\r\n    const handleChange = e =>{\r\n        const {name,value} = e.target\r\n        name===\"text\"?\r\n        setText(value)\r\n        :setAmount(value)\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n       if(!fieldIsValid()) return\r\n        const newTransaction = {\r\n            id:Math.floor(Math.random()*1000000),\r\n            text,\r\n            amount:+amount,\r\n            currency\r\n        }\r\n        addTransaction(newTransaction);\r\n        setAmount(0)\r\n        setText('')\r\n    }\r\n    return (\r\n        <div className='add-transaction-container'> \r\n            <h3>הוסף עסקה חדשה </h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='inputs-container'>\r\n                    <TextInput text={text} handleChange={handleChange} validText={errors.validText}textRequired={errors.textRequired}/>\r\n                    <AmountInput amount={amount} handleChange={handleChange} validAmount={errors.validAmount}amountRequired={errors.amountRequired}/>\r\n                </div>\r\n                <button className=\"btn\" type=\"submit\" >הוסף עסקה</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n})","import React,{useEffect,useState,useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport  const Currency =React.memo(() => {\r\n    const [selectionValue,setSelectionValue] = useState('₪')\r\n    const { changeCurrency } = useContext(GlobalContext);\r\n    const handleSelectChange = event => {\r\n        const {  value } = event.target;\r\n        setSelectionValue(value);\r\n    };\r\n    useEffect(()=>{\r\n        changeCurrency(selectionValue);\r\n    },[selectionValue])\r\n    return (               \r\n        <div className=\"currency-container\"> \r\n            <label htmlFor=\"currency-choice\">בחר מטבע:</label>\r\n            <select  id=\"currency-list\" defaultValue=\"₪\" onChange={handleSelectChange}>\r\n                <option value=\"$\">$</option>\r\n                <option  value=\"₪\">₪</option>\r\n                <option value=\"€\">€</option>\r\n            </select>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\nimport {Header} from './components/Header'\nimport {Balance} from './components/Balance'\nimport {IncomeExpenses} from './components/IncomeExpenses'\nimport {TransactionList} from './components/TransactionList'\nimport {AddTransaction} from './components/AddTransaction'\nimport {Currency} from './components/Currency'\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n            \n          <Balance/>\n          <div className=\"sub-container\">\n            <IncomeExpenses/>\n            <TransactionList/>\n          </div>          \n          <Currency/>\n          <AddTransaction/>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}